#!/usr/bin/env bash

# Returns the first available lock screen application.
get_lock_app() {
	if command -v hyprlock >/dev/null 2>&1; then
		echo "hyprlock"
	elif command -v swaylock >/dev/null 2>&1; then
		echo "swaylock"
	else
		notify-send "No lock application found" \
			"Install 'swaylock' or 'hyprlock'. Proceeding without lock in 5 seconds."
		sleep 5
		return 1
	fi
}

# Launches the lock screen in the background
lockscreen() {
	local lock_app
	lock_app="$(get_lock_app)" || return 1

	case "$lock_app" in
		swaylock) swaylock -c 000000 & ;;
		hyprlock) hyprlock & ;;
	esac
	sleep 1
}

to_lower() {
	printf '%s\n' "${1,,}"
}

# Launch menu to select the action
get_action() {
	local menu_items selection action

	# Define menu items as array for better structure
	menu_items=(
		" Poweroff"
		" Reboot"
		" Suspend"
		" Lock"
		" Hibernate"
	)

	# Displays the power menu using wofi and stores the selected line.
	selection=$(printf '%s\n' "${menu_items[@]}" | wofi -i --dmenu --width 230 --height 200 -s ~/.config/wofi/powermenu.css)

	# Exits if no selection was made.
	[[ -z "$selection" ]] && exit 1

	# Extracts the action label from the selected menu entry.
	action="${selection##* }"
	echo "$action"
}

# Exits if wofi is not installed.
if ! command -v wofi >/dev/null 2>&1; then
	notify-send "Missing required program: wofi"
	exit 1
fi

action=$1

if [ -z "$action" ]; then
	action="$(get_action)" || exit
fi

action=$(to_lower "$action")

# Executes the corresponding system command based on the user's selection.
case "$action" in
	poweroff)
		systemctl poweroff
		;;
	reboot)
		systemctl reboot
		;;
	suspend)
		lockscreen
		systemctl suspend
		;;
	hibernate)
		lockscreen
		systemctl hibernate
		;;
	lock)
		lockscreen
		;;
	*)
		notify-send "Invalid option"
		exit 1
		;;
esac
